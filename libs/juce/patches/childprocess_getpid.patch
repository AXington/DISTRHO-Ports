diff --git a/modules/juce_core/native/juce_posix_SharedCode.h b/modules/juce_core/native/juce_posix_SharedCode.h
index e682eae..17a5307 100644
--- a/modules/juce_core/native/juce_posix_SharedCode.h
+++ b/modules/juce_core/native/juce_posix_SharedCode.h
@@ -1121,6 +1121,11 @@ public:
         return 0;
     }
 
+    int getPID() const noexcept
+    {
+        return childPID;
+    }
+
     int childPID;
 
 private:
diff --git a/modules/juce_core/native/juce_win32_Threads.cpp b/modules/juce_core/native/juce_win32_Threads.cpp
index 1421c10..ca22ea0 100644
--- a/modules/juce_core/native/juce_win32_Threads.cpp
+++ b/modules/juce_core/native/juce_win32_Threads.cpp
@@ -534,6 +534,11 @@ public:
         return (uint32) exitCode;
     }
 
+    int getPID() const noexcept
+    {
+        return 0;
+    }
+
     bool ok;
 
 private:
diff --git a/modules/juce_core/threads/juce_ChildProcess.cpp b/modules/juce_core/threads/juce_ChildProcess.cpp
index 4566b13..e984837 100644
--- a/modules/juce_core/threads/juce_ChildProcess.cpp
+++ b/modules/juce_core/threads/juce_ChildProcess.cpp
@@ -81,6 +81,11 @@ String ChildProcess::readAllProcessOutput()
     return result.toString();
 }
 
+uint32 ChildProcess::getPID() const noexcept
+{
+    return activeProcess != nullptr ? activeProcess->getPID() : 0;
+}
+
 //==============================================================================
 #if JUCE_UNIT_TESTS
 
diff --git a/modules/juce_core/threads/juce_ChildProcess.h b/modules/juce_core/threads/juce_ChildProcess.h
index 0adcb57..7a1c88c 100644
--- a/modules/juce_core/threads/juce_ChildProcess.h
+++ b/modules/juce_core/threads/juce_ChildProcess.h
@@ -106,6 +106,8 @@ public:
     */
     bool kill();
 
+    uint32 getPID() const noexcept;
+
 private:
     //==============================================================================
     class ActiveProcess;
